webpackJsonp([16],{2047:function(e,t,n){var o=n(0),r=n(90),a=n(445).PageRenderer;a.__esModule&&(a=a.default);var p=r({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:n(2151)}},componentWillMount:function(){},render:function(){return o.createElement(a,Object.assign({},this.props,{content:this.state.content}))}});p.__catalog_loader__=!0,e.exports=p},2151:function(e,t){e.exports='## Popover\n\nonFocusAway should always be used according to the spec.\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<PopoverDemo>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="top">Hello!</Popover>\n\t</PopoverManager>\n</PopoverDemo>\n```\n\n## PopoverBase\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<PopoverDemo>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<PopoverBase isOpen={state.isOpen} placement="top">Notice my lack of style!</PopoverBase>\n\t</PopoverManager>\n</PopoverDemo>\n```\n\n## Placement\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<PopoverDemo>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="top">Hello!</Popover>\n\t</PopoverManager>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="bottom">Hello!</Popover>\n\t</PopoverManager>\n\t<PopoverManager  onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="left">Hello!</Popover>\n\t</PopoverManager>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="right">Hello!</Popover>\n\t</PopoverManager>\n</PopoverDemo>\n```\n\n## Options\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<PopoverDemo>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="top" theme={{ backgroundColor: \'#ebf7ff\' }}>Hello!</Popover>\n\t</PopoverManager>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover with zIndex!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="top" styleOverrides={{ padding: \'18px\', hideShadow: true, width: \'200px\', border: \'black solid 1px\', zIndex: 10 }}>Hello!</Popover>\n\t</PopoverManager>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="top" hideArrow>Hello!</Popover>\n\t</PopoverManager>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover w/ a delay!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="top" delay={{ show: 1000, hide: 1000 }}>Hello!</Popover>\n\t</PopoverManager>\n</PopoverDemo>\n```\n\n## Using container prop\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n// overflow: hidden\n<PopoverOverflowDemo>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="top">I\'m inline</Popover>\n\t</PopoverManager>\n\t<PopoverManager onFocusAway={() => setState({ isOpen: false })}>\n\t\t<PopoverReference>\n\t\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Show a Popover!</Button>\n\t\t</PopoverReference>\n\t\t<Popover isOpen={state.isOpen} placement="top" container="body">I\'m thinking with portals!</Popover>\n\t</PopoverManager>\n</PopoverOverflowDemo>\n```\n\n## Tooltip\n\nAll props for normal popovers are available to tooltips.\nTooltips will be hidden on mobile.\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<PopoverDemo>\n\t<Tooltip content="Hello!">\n\t\t<Button variant="primary" size="medium">Uncontrolled Tooltip</Button>\n\t</Tooltip>\n\n\t<Tooltip content="Hello!" isOpen={state.isOpen}>\n\t\t<Button variant="primary" size="medium" onClick={() => setState({ isOpen: !state.isOpen })}>Controlled Tooltip</Button>\n\t</Tooltip>\n\n\t<Tooltip content={<StyledDiv>Hello!</StyledDiv>}>\n\t\t<Button variant="primary" size="medium">Tooltip with jsx</Button>\n\t</Tooltip>\n</PopoverDemo>\n```\n'}});
//# sourceMappingURL=16.be489b92.chunk.js.map