{"version":3,"sources":["webpack:///static/18.f3e69f25.chunk.js","webpack:///./catalog/parameter-sentence/variations.md?202a","webpack:///./catalog/parameter-sentence/variations.md"],"names":["webpackJsonp","2067","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2171"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,QAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/18.f3e69f25.chunk.js","sourcesContent":["webpackJsonp([18],{\n\n/***/ 2067:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(90);\n    var PageRenderer = __webpack_require__(445).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2171)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2171:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Desktop Parameter Sentence\\n\\nNote to designers: under the hood a parameter sentence is seen as a form by screen readers. Including a small description of each parameter as if it was a form label will go a long way towards keeping it accessible.\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tisOpen: false,\\n\\tprepost: 'after',\\n\\tschedule: 'annual',\\n\\tpercentage: 10,\\n\\tincome: 55700,\\n}\\n---\\n<ParameterSentenceDemo>\\n\\t<ParameterSentence accessibilityFormLabel=\\\"Tithe Calculator\\\">\\n\\t\\t{'I want to give '}\\n\\t\\t<ParameterInputBox\\n\\t\\t\\tdefaultValue=\\\"10\\\"\\n\\t\\t\\tvalue={state.percentage}\\n\\t\\t\\tonChange={event => setState({ percentage: event.target.value })}\\n\\t\\t\\tformatValue={val => `${val}%`}\\n\\t\\t\\twidth=\\\"30px\\\"\\n\\t\\t\\taccessibilityLabel={'Percent of income to tithe'}\\n\\t\\t/>\\n\\t\\t{' of my '}\\n\\t\\t<ParameterSelect\\n\\t\\t\\tselectedId={state.schedule}\\n\\t\\t\\tonItemSelect={item => setState({ schedule: item })}\\n\\t\\t\\toptions={scheduleOptions}\\n\\t\\t\\taccessibilityLabel={'Pay schedule of income'}\\n\\t\\t/>\\n\\t\\t{' income'}\\n\\t</ParameterSentence>\\n</ParameterSentenceDemo>\\n```\\n\\n## Mobile ParameterSelects\\n\\nIf this is a mobile or touch screen device include the `useNativeSelect` prop to trigger the native select picker.\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tisOpen: false,\\n\\tprepost: 'after',\\n\\tschedule: 'annual',\\n\\tpercentage: 10,\\n\\tincome: 55700,\\n}\\n---\\n<ParameterSentenceDemo>\\n\\t<ParameterSentence accessibilityFormLabel=\\\"Tithe Calculator\\\">\\n\\t\\t<ParameterSelect\\n\\t\\t\\tuseNativeSelect\\n\\t\\t\\tselectedId={state.schedule}\\n\\t\\t\\tonItemSelect={item => setState({ schedule: item })}\\n\\t\\t\\toptions={scheduleOptions}\\n\\t\\t\\taccessibilityLabel={'Pay schedule of income'}\\n\\t\\t/>\\n\\t</ParameterSentence>\\n</ParameterSentenceDemo>\\n```\\n\\n## Style variations\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tisOpen: false,\\n\\tprepost: 'after',\\n\\tschedule: 'annual',\\n\\tpercentage: 10,\\n\\tincome: 55700,\\n}\\n---\\n<ParameterSentenceDemo addMargin>\\n\\t<ParameterSelect\\n\\t\\tselectedId={state.schedule}\\n\\t\\tonItemSelect={item => setState({ schedule: item })}\\n\\t\\toptions={scheduleOptions}\\n\\t\\taccessibilityLabel={'Pay schedule of income'}\\n\\t\\ttheme={{ underlineColor: 'plum' }}\\n\\t\\tstyleOverrides={{ fontSize: '18px' }}\\n\\t/>\\n\\t<ParameterInputBox\\n\\t\\tdefaultValue=\\\"10\\\"\\n\\t\\tvalue={state.percentage}\\n\\t\\tonChange={event => setState({ percentage: event.target.value })}\\n\\t\\tformatValue={val => `${val}%`}\\n\\t\\twidth=\\\"35px\\\"\\n\\t\\taccessibilityLabel={'Percent of income to tithe'}\\n\\t\\ttheme={{ underlineColor: 'plum' }}\\n\\t\\tstyleOverrides={{ fontSize: '18px' }}\\n\\t/>\\n</ParameterSentenceDemo>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/18.f3e69f25.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/parameter-sentence/variations.md\n// module id = 2067\n// module chunks = 18","module.exports = \"## Desktop Parameter Sentence\\n\\nNote to designers: under the hood a parameter sentence is seen as a form by screen readers. Including a small description of each parameter as if it was a form label will go a long way towards keeping it accessible.\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tisOpen: false,\\n\\tprepost: 'after',\\n\\tschedule: 'annual',\\n\\tpercentage: 10,\\n\\tincome: 55700,\\n}\\n---\\n<ParameterSentenceDemo>\\n\\t<ParameterSentence accessibilityFormLabel=\\\"Tithe Calculator\\\">\\n\\t\\t{'I want to give '}\\n\\t\\t<ParameterInputBox\\n\\t\\t\\tdefaultValue=\\\"10\\\"\\n\\t\\t\\tvalue={state.percentage}\\n\\t\\t\\tonChange={event => setState({ percentage: event.target.value })}\\n\\t\\t\\tformatValue={val => `${val}%`}\\n\\t\\t\\twidth=\\\"30px\\\"\\n\\t\\t\\taccessibilityLabel={'Percent of income to tithe'}\\n\\t\\t/>\\n\\t\\t{' of my '}\\n\\t\\t<ParameterSelect\\n\\t\\t\\tselectedId={state.schedule}\\n\\t\\t\\tonItemSelect={item => setState({ schedule: item })}\\n\\t\\t\\toptions={scheduleOptions}\\n\\t\\t\\taccessibilityLabel={'Pay schedule of income'}\\n\\t\\t/>\\n\\t\\t{' income'}\\n\\t</ParameterSentence>\\n</ParameterSentenceDemo>\\n```\\n\\n## Mobile ParameterSelects\\n\\nIf this is a mobile or touch screen device include the `useNativeSelect` prop to trigger the native select picker.\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tisOpen: false,\\n\\tprepost: 'after',\\n\\tschedule: 'annual',\\n\\tpercentage: 10,\\n\\tincome: 55700,\\n}\\n---\\n<ParameterSentenceDemo>\\n\\t<ParameterSentence accessibilityFormLabel=\\\"Tithe Calculator\\\">\\n\\t\\t<ParameterSelect\\n\\t\\t\\tuseNativeSelect\\n\\t\\t\\tselectedId={state.schedule}\\n\\t\\t\\tonItemSelect={item => setState({ schedule: item })}\\n\\t\\t\\toptions={scheduleOptions}\\n\\t\\t\\taccessibilityLabel={'Pay schedule of income'}\\n\\t\\t/>\\n\\t</ParameterSentence>\\n</ParameterSentenceDemo>\\n```\\n\\n## Style variations\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tisOpen: false,\\n\\tprepost: 'after',\\n\\tschedule: 'annual',\\n\\tpercentage: 10,\\n\\tincome: 55700,\\n}\\n---\\n<ParameterSentenceDemo addMargin>\\n\\t<ParameterSelect\\n\\t\\tselectedId={state.schedule}\\n\\t\\tonItemSelect={item => setState({ schedule: item })}\\n\\t\\toptions={scheduleOptions}\\n\\t\\taccessibilityLabel={'Pay schedule of income'}\\n\\t\\ttheme={{ underlineColor: 'plum' }}\\n\\t\\tstyleOverrides={{ fontSize: '18px' }}\\n\\t/>\\n\\t<ParameterInputBox\\n\\t\\tdefaultValue=\\\"10\\\"\\n\\t\\tvalue={state.percentage}\\n\\t\\tonChange={event => setState({ percentage: event.target.value })}\\n\\t\\tformatValue={val => `${val}%`}\\n\\t\\twidth=\\\"35px\\\"\\n\\t\\taccessibilityLabel={'Percent of income to tithe'}\\n\\t\\ttheme={{ underlineColor: 'plum' }}\\n\\t\\tstyleOverrides={{ fontSize: '18px' }}\\n\\t/>\\n</ParameterSentenceDemo>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/parameter-sentence/variations.md\n// module id = 2171\n// module chunks = 18"],"sourceRoot":""}