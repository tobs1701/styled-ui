{"version":3,"sources":["webpack:///static/38.82d9dbca.chunk.js","webpack:///./catalog/grid/variations.md?af0b","webpack:///./catalog/grid/variations.md"],"names":["webpackJsonp","2027","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2131"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,QAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/38.82d9dbca.chunk.js","sourcesContent":["webpackJsonp([38],{\n\n/***/ 2027:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(90);\n    var PageRenderer = __webpack_require__(445).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2131)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2131:\n/***/ (function(module, exports) {\n\nmodule.exports = \"These examples use `ag-grid-react` with the Faithlife theme applied.\\n\\n### Simple Table\\n\\nThe simplest use of the table. Each column is sortable and resizable. Leave `maxRows` blank for an infinite scroll table.\\n\\n```react\\nshowSource: true\\n---\\n<div>\\n\\t<SimpleGrid data={censusData} maxRows={10} onRowClick={row => {alert(row[0].NAME)}}>\\n\\t\\t<GridColumn displayName=\\\"Name\\\" fieldName=\\\"value\\\" defaultSort={GridColumn.sortOptions.ascending} />\\n\\t\\t<GridColumn displayName=\\\"Population\\\" fieldName=\\\"population\\\" isRightAligned />\\n\\t\\t<GridColumn displayName=\\\"Net Population Change\\\" fieldName=\\\"populationChange\\\" isRightAligned />\\n\\t\\t<GridColumn displayName=\\\"Births\\\" fieldName=\\\"births\\\" isRightAligned width={100} isLargeViewportOnly />\\n\\t\\t<GridColumn displayName=\\\"Deaths\\\" fieldName=\\\"deaths\\\" isRightAligned width={100} isSortable={false} isLargeViewportOnly/>\\n\\t</SimpleGrid>\\n</div>\\n```\\n\\n### Paginated Table\\n\\nSimple table with pagination.\\n\\n```react\\nshowSource: true\\n---\\n<div>\\n\\t<PaginatedGrid data={censusData} maxRows={10}>\\n\\t\\t<GridColumn displayName=\\\"Name\\\" fieldName=\\\"value\\\" defaultSort={GridColumn.sortOptions.ascending} />\\n\\t\\t<GridColumn displayName=\\\"Population\\\" fieldName=\\\"population\\\" />\\n\\t\\t<GridColumn displayName=\\\"Net Population Change\\\" fieldName=\\\"populationChange\\\" />\\n\\t\\t<GridColumn displayName=\\\"Births\\\" fieldName=\\\"births\\\" />\\n\\t\\t<GridColumn displayName=\\\"Deaths\\\" fieldName=\\\"deaths\\\" />\\n\\t</PaginatedGrid>\\n</div>\\n```\\n\\n### Example data for Simple and Paginated Table\\n\\n```code\\nland: json\\n---\\n[\\n\\t{\\n\\t\\t\\\"id\\\": 0,\\n\\t\\t\\\"value\\\": \\\"Abilene, TX\\\",\\n\\t\\t\\\"areaDesc\\\": \\\"Metropolitan Statistical Area\\\",\\n\\t\\t\\\"population\\\": 165252,\\n\\t\\t\\\"populationChange\\\": 337,\\n\\t\\t\\\"births\\\": 540,\\n\\t\\t\\\"deaths\\\": 406\\n\\t}\\n]\\n```\\n\\n### Tree Table\\n\\nA table to display tree data as well as supporting drag-drop reordering.\\n\\n```react\\nshowSource: true\\nstate: { }\\n---\\n<div>\\n\\t<TreeGrid\\n\\t\\tdata={state.data || censusDataFolders}\\n\\t\\tmaxRows={10}\\n\\t\\tautoGroupExpansion={TreeGrid.expandedRowsOptions.topLevel}\\n\\t\\tonDataChange={data => setState({ data })}\\n\\t\\tenableDragDrop\\n\\t>\\n\\t\\t<TreeGrid.GroupColumn displayName=\\\"Name\\\" width={500} />\\n\\t\\t<GridColumn displayName=\\\"Population\\\" fieldName=\\\"population\\\" />\\n\\t\\t<GridColumn displayName=\\\"Net Population Change\\\" fieldName=\\\"populationChange\\\" />\\n\\t</TreeGrid>\\n</div>\\n```\\n\\n### Example data for Tree Grid\\n\\n```code\\nland: json\\n---\\n[\\n\\t{\\n\\t\\t\\\"id\\\": 1,\\n\\t\\t\\\"value\\\": \\\"Metropolitan Statistical Area\\\",\\n\\t\\tchildren: [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"id\\\": 2,\\n\\t\\t\\t\\t\\\"value\\\": \\\"Pop more than 100k\\\",\\n\\t\\t\\t\\tchildren: [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"id\\\": 3,\\n\\t\\t\\t\\t\\t\\t\\\"value\\\": \\\"Abilene, TX\\\",\\n\\t\\t\\t\\t\\t\\t\\\"population\\\": 165252,\\n\\t\\t\\t\\t\\t\\t\\\"populationChange\\\": 337,\\n\\t\\t\\t\\t\\t\\t\\\"births\\\": 540,\\n\\t\\t\\t\\t\\t\\t\\\"deaths\\\": 406,\\n\\t\\t\\t\\t\\t\\t\\\"path\\\": [\\\"Metropolitan Statistical Area\\\", \\\"Pop more than 100k\\\", \\\"Abilene, TX\\\"]\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"id\\\": 4,\\n\\t\\t\\t\\t\\t\\t\\\"value\\\":\\\"Bellingham, WA\\\",\\n\\t\\t\\t\\t\\t\\t\\\"population\\\":201140,\\n\\t\\t\\t\\t\\t\\t\\\"births\\\":608,\\n\\t\\t\\t\\t\\t\\t\\\"deaths\\\":356\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t]\\n\\t\\t\\t}\\n\\t\\t]\\n\\t}\\n]\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/38.82d9dbca.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/grid/variations.md\n// module id = 2027\n// module chunks = 38","module.exports = \"These examples use `ag-grid-react` with the Faithlife theme applied.\\n\\n### Simple Table\\n\\nThe simplest use of the table. Each column is sortable and resizable. Leave `maxRows` blank for an infinite scroll table.\\n\\n```react\\nshowSource: true\\n---\\n<div>\\n\\t<SimpleGrid data={censusData} maxRows={10} onRowClick={row => {alert(row[0].NAME)}}>\\n\\t\\t<GridColumn displayName=\\\"Name\\\" fieldName=\\\"value\\\" defaultSort={GridColumn.sortOptions.ascending} />\\n\\t\\t<GridColumn displayName=\\\"Population\\\" fieldName=\\\"population\\\" isRightAligned />\\n\\t\\t<GridColumn displayName=\\\"Net Population Change\\\" fieldName=\\\"populationChange\\\" isRightAligned />\\n\\t\\t<GridColumn displayName=\\\"Births\\\" fieldName=\\\"births\\\" isRightAligned width={100} isLargeViewportOnly />\\n\\t\\t<GridColumn displayName=\\\"Deaths\\\" fieldName=\\\"deaths\\\" isRightAligned width={100} isSortable={false} isLargeViewportOnly/>\\n\\t</SimpleGrid>\\n</div>\\n```\\n\\n### Paginated Table\\n\\nSimple table with pagination.\\n\\n```react\\nshowSource: true\\n---\\n<div>\\n\\t<PaginatedGrid data={censusData} maxRows={10}>\\n\\t\\t<GridColumn displayName=\\\"Name\\\" fieldName=\\\"value\\\" defaultSort={GridColumn.sortOptions.ascending} />\\n\\t\\t<GridColumn displayName=\\\"Population\\\" fieldName=\\\"population\\\" />\\n\\t\\t<GridColumn displayName=\\\"Net Population Change\\\" fieldName=\\\"populationChange\\\" />\\n\\t\\t<GridColumn displayName=\\\"Births\\\" fieldName=\\\"births\\\" />\\n\\t\\t<GridColumn displayName=\\\"Deaths\\\" fieldName=\\\"deaths\\\" />\\n\\t</PaginatedGrid>\\n</div>\\n```\\n\\n### Example data for Simple and Paginated Table\\n\\n```code\\nland: json\\n---\\n[\\n\\t{\\n\\t\\t\\\"id\\\": 0,\\n\\t\\t\\\"value\\\": \\\"Abilene, TX\\\",\\n\\t\\t\\\"areaDesc\\\": \\\"Metropolitan Statistical Area\\\",\\n\\t\\t\\\"population\\\": 165252,\\n\\t\\t\\\"populationChange\\\": 337,\\n\\t\\t\\\"births\\\": 540,\\n\\t\\t\\\"deaths\\\": 406\\n\\t}\\n]\\n```\\n\\n### Tree Table\\n\\nA table to display tree data as well as supporting drag-drop reordering.\\n\\n```react\\nshowSource: true\\nstate: { }\\n---\\n<div>\\n\\t<TreeGrid\\n\\t\\tdata={state.data || censusDataFolders}\\n\\t\\tmaxRows={10}\\n\\t\\tautoGroupExpansion={TreeGrid.expandedRowsOptions.topLevel}\\n\\t\\tonDataChange={data => setState({ data })}\\n\\t\\tenableDragDrop\\n\\t>\\n\\t\\t<TreeGrid.GroupColumn displayName=\\\"Name\\\" width={500} />\\n\\t\\t<GridColumn displayName=\\\"Population\\\" fieldName=\\\"population\\\" />\\n\\t\\t<GridColumn displayName=\\\"Net Population Change\\\" fieldName=\\\"populationChange\\\" />\\n\\t</TreeGrid>\\n</div>\\n```\\n\\n### Example data for Tree Grid\\n\\n```code\\nland: json\\n---\\n[\\n\\t{\\n\\t\\t\\\"id\\\": 1,\\n\\t\\t\\\"value\\\": \\\"Metropolitan Statistical Area\\\",\\n\\t\\tchildren: [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"id\\\": 2,\\n\\t\\t\\t\\t\\\"value\\\": \\\"Pop more than 100k\\\",\\n\\t\\t\\t\\tchildren: [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"id\\\": 3,\\n\\t\\t\\t\\t\\t\\t\\\"value\\\": \\\"Abilene, TX\\\",\\n\\t\\t\\t\\t\\t\\t\\\"population\\\": 165252,\\n\\t\\t\\t\\t\\t\\t\\\"populationChange\\\": 337,\\n\\t\\t\\t\\t\\t\\t\\\"births\\\": 540,\\n\\t\\t\\t\\t\\t\\t\\\"deaths\\\": 406,\\n\\t\\t\\t\\t\\t\\t\\\"path\\\": [\\\"Metropolitan Statistical Area\\\", \\\"Pop more than 100k\\\", \\\"Abilene, TX\\\"]\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"id\\\": 4,\\n\\t\\t\\t\\t\\t\\t\\\"value\\\":\\\"Bellingham, WA\\\",\\n\\t\\t\\t\\t\\t\\t\\\"population\\\":201140,\\n\\t\\t\\t\\t\\t\\t\\\"births\\\":608,\\n\\t\\t\\t\\t\\t\\t\\\"deaths\\\":356\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t]\\n\\t\\t\\t}\\n\\t\\t]\\n\\t}\\n]\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/grid/variations.md\n// module id = 2131\n// module chunks = 38"],"sourceRoot":""}